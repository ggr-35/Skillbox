/*
Реализуйте работу точного таймера с визуальной отдачей.

В начале программы пользователь вводит количество минут и секунд, которые требуется засечь на таймере, и нажимает «Ввод».

После этого начинается обратный отсчёт времени, о чём незамедлительно и последовательно сообщается пользователю. 
Формат вывода такой же, как и при вводе интервала: минуты и секунды.

Как только отсчёт на таймере иссяк, программа сообщает об этом с помощью вывода в консоль специального сообщения. 
Сообщение вместо аудиосигнала может выглядеть так: DING! DING! DING!

Для ввода значения для засекания времени используйте std::get_time, но в качестве формата запросите только минуты и секунды. 
Целевое время для остановки таймера вычислите сами с помощью манипуляции над текущим std::time. 
Количество оставшегося времени выводите в цикле и вычислите его самостоятельно с помощью обращения с типом std::time_t как с секундами.
*/

#include <iostream>
#include <ctime>
#include <iomanip>

int main()
{
    std::time_t t = std::time(nullptr);
    std::tm local = *std::localtime(&t);
    std::cin >> std::get_time(&local,"%M:%S");
    t += ((local.tm_min * 60) + local.tm_sec);

    for (size_t i = 0; i < 10; i++)
    {
        std::cout << std::difftime(t, std::time(nullptr)); 
    }
    
    while (std::difftime(t, std::time(nullptr)) != 0)
    {
       std::cout << std::put_time(&local,"%M:%S");
    }
}